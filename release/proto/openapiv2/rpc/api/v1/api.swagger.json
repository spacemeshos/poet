{
  "swagger": "2.0",
  "info": {
    "title": "rpc/api/v1/api.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "PoetService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/info": {
      "get": {
        "summary": "*\nInfo returns general information concerning the service,\nincluding its identity pubkey.",
        "operationId": "PoetService_Info",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1InfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "PoetService"
        ]
      }
    },
    "/v1/pow_params": {
      "get": {
        "operationId": "PoetService_PowParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PowParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "PoetService"
        ]
      }
    },
    "/v1/proofs/{roundId}": {
      "get": {
        "summary": "*\nroof returns the generated proof for given round id.",
        "operationId": "PoetService_Proof",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ProofResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "roundId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PoetService"
        ]
      }
    },
    "/v1/submit": {
      "post": {
        "summary": "*\nSubmit registers data to the service's current open round,\nto be included its later generated proof.",
        "operationId": "PoetService_Submit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SubmitResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SubmitRequest"
            }
          }
        ],
        "tags": [
          "PoetService"
        ]
      }
    }
  },
  "definitions": {
    "InfoResponseCerifier": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "pubkey": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "SubmitRequestCertificate": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte"
        },
        "signature": {
          "type": "string",
          "format": "byte",
          "description": "The certifier's signature over `data`\nconfirming that the pubkey is verified."
        },
        "hint": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "apiv1PowParams": {
      "type": "object",
      "properties": {
        "difficulty": {
          "type": "integer",
          "format": "int64",
          "title": "Difficulty of the PoW challenge (in terms of leading zero bits in the hash)"
        },
        "challenge": {
          "type": "string",
          "format": "byte",
          "title": "The challenge to be used for the PoW"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1InfoResponse": {
      "type": "object",
      "properties": {
        "servicePubkey": {
          "type": "string",
          "format": "byte"
        },
        "phaseShift": {
          "type": "string"
        },
        "cycleGap": {
          "type": "string"
        },
        "certifier": {
          "$ref": "#/definitions/InfoResponseCerifier"
        }
      }
    },
    "v1MerkleProof": {
      "type": "object",
      "properties": {
        "root": {
          "type": "string",
          "format": "byte"
        },
        "provenLeaves": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "proofNodes": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "v1PoetProof": {
      "type": "object",
      "properties": {
        "proof": {
          "$ref": "#/definitions/v1MerkleProof"
        },
        "members": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "leaves": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1PowParamsResponse": {
      "type": "object",
      "properties": {
        "powParams": {
          "$ref": "#/definitions/apiv1PowParams"
        }
      }
    },
    "v1ProofResponse": {
      "type": "object",
      "properties": {
        "proof": {
          "$ref": "#/definitions/v1PoetProof"
        },
        "pubkey": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "v1SubmitRequest": {
      "type": "object",
      "properties": {
        "nonce": {
          "type": "string",
          "format": "uint64",
          "title": "Proof of Work nonce\ndeprecated - use certificate instead"
        },
        "powParams": {
          "$ref": "#/definitions/apiv1PowParams",
          "title": "Proof of Work parameters that were used to generate the nonce\ndeprecated - use certificate instead"
        },
        "prefix": {
          "type": "string",
          "format": "byte",
          "title": "Prefix to be added to challenge for signature verification"
        },
        "challenge": {
          "type": "string",
          "format": "byte",
          "title": "The PoET challenge to be registered for the open round"
        },
        "pubkey": {
          "type": "string",
          "format": "byte",
          "title": "The user's public key (node ID)"
        },
        "signature": {
          "type": "string",
          "format": "byte",
          "title": "The user's signature over the challenge"
        },
        "deadline": {
          "type": "string",
          "format": "date-time",
          "description": "The time by which the proof is needed.\nIf the currently open round will end after this time\nand the  proof cannot be generated by this time, the request will be rejected."
        },
        "certificate": {
          "$ref": "#/definitions/SubmitRequestCertificate"
        },
        "certificatePubkeyHint": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "v1SubmitResponse": {
      "type": "object",
      "properties": {
        "roundId": {
          "type": "string"
        },
        "roundEnd": {
          "type": "string"
        }
      }
    }
  }
}
